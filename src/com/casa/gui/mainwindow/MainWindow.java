/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.casa.gui.mainwindow;

import com.casa.doughlatorRecipesGenerator.DoughlatorRecipesGenerator;
import com.casa.doughlatorRecipesGenerator.Logger;
import java.io.File;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;

/**
 *
 * @author rpblanco
 */
public class MainWindow extends javax.swing.JFrame implements Logger.OutputMessagesListener{

    final private DoughlatorRecipesGenerator drg;
    
    /**
     * Creates new form MainWindow
     */
    public MainWindow() {
        initComponents();
        
        /* Create object each time button is pressed */
        drg = new DoughlatorRecipesGenerator(this);
        
        OutputJText.setEditable(false);
        OutputReportJText.setEditable(false);
        
        this.setIconImage(new ImageIcon(getClass().getResource("/com/casa/resources/pan_doughlator_icon.png")).getImage());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jOptionPane1 = new javax.swing.JOptionPane();
        TopJPanel = new javax.swing.JPanel();
        InputFileJText = new javax.swing.JTextField();
        SelectInputFileJButton = new javax.swing.JButton();
        OutputFileJText = new javax.swing.JTextField();
        InputFileJLabel = new javax.swing.JLabel();
        OutputFileJLabel = new javax.swing.JLabel();
        StartConversionJButton = new javax.swing.JButton();
        OutputJPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        OutputJText = new javax.swing.JTextArea();
        BottomJPanel = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        OutputReportJText = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        TopJPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Select the input/ouput files"));

        InputFileJText.setText("Select the XML input file");
        InputFileJText.setToolTipText("");

        SelectInputFileJButton.setText("Choose input file");
        SelectInputFileJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SelectInputFileJButtonActionPerformed(evt);
            }
        });

        OutputFileJText.setToolTipText("");

        InputFileJLabel.setText("Input file:");

        OutputFileJLabel.setText("Output file:");

        StartConversionJButton.setText("Start");
        StartConversionJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StartConversionJButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout TopJPanelLayout = new javax.swing.GroupLayout(TopJPanel);
        TopJPanel.setLayout(TopJPanelLayout);
        TopJPanelLayout.setHorizontalGroup(
            TopJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TopJPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(TopJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(InputFileJLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(OutputFileJLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 68, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(TopJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(TopJPanelLayout.createSequentialGroup()
                        .addComponent(InputFileJText, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(SelectInputFileJButton))
                    .addGroup(TopJPanelLayout.createSequentialGroup()
                        .addComponent(OutputFileJText, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(StartConversionJButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(238, Short.MAX_VALUE))
        );
        TopJPanelLayout.setVerticalGroup(
            TopJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TopJPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(TopJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(InputFileJText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SelectInputFileJButton)
                    .addComponent(InputFileJLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                .addGroup(TopJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(OutputFileJText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(OutputFileJLabel)
                    .addComponent(StartConversionJButton))
                .addContainerGap())
        );

        OutputJPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Conversion output"));

        OutputJText.setColumns(20);
        OutputJText.setRows(5);
        jScrollPane1.setViewportView(OutputJText);

        javax.swing.GroupLayout OutputJPanelLayout = new javax.swing.GroupLayout(OutputJPanel);
        OutputJPanel.setLayout(OutputJPanelLayout);
        OutputJPanelLayout.setHorizontalGroup(
            OutputJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(OutputJPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        OutputJPanelLayout.setVerticalGroup(
            OutputJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(OutputJPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );

        BottomJPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("File list report"));

        OutputReportJText.setColumns(20);
        OutputReportJText.setRows(5);
        jScrollPane2.setViewportView(OutputReportJText);

        javax.swing.GroupLayout BottomJPanelLayout = new javax.swing.GroupLayout(BottomJPanel);
        BottomJPanel.setLayout(BottomJPanelLayout);
        BottomJPanelLayout.setHorizontalGroup(
            BottomJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BottomJPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
        );
        BottomJPanelLayout.setVerticalGroup(
            BottomJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BottomJPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 132, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(TopJPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(OutputJPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(BottomJPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(TopJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(OutputJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(BottomJPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        BottomJPanel.getAccessibleContext().setAccessibleDescription("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SelectInputFileJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SelectInputFileJButtonActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        
        fileChooser.showOpenDialog(this);
        File selectedFile = fileChooser.getSelectedFile();
        
        if(selectedFile!=null)
        {
            /* Send file object to model */
            drg.setRecipeXmlFileName(selectedFile);
            
            InputFileJText.setText(selectedFile.getName());
        }
        else
        {
            /* Do nothing */
        }
    }//GEN-LAST:event_SelectInputFileJButtonActionPerformed

    private void StartConversionJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StartConversionJButtonActionPerformed
        
        String fileName = OutputFileJText.getText();
        int retVal = -1;
        
        if(fileName==null)
        {
            
        }
        else
        {   
            /* Clear output boxes */
            OutputJText.setText("");
            OutputReportJText.setText("");
            
            /* Set the output file name */
            drg.setRecipeObjListFileName(fileName);
            
            /* Start conversion */
            retVal = drg.startConversion();
        }
    }//GEN-LAST:event_StartConversionJButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainWindow().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel BottomJPanel;
    private javax.swing.JLabel InputFileJLabel;
    private javax.swing.JTextField InputFileJText;
    private javax.swing.JLabel OutputFileJLabel;
    private javax.swing.JTextField OutputFileJText;
    private javax.swing.JPanel OutputJPanel;
    private javax.swing.JTextArea OutputJText;
    private javax.swing.JTextArea OutputReportJText;
    private javax.swing.JButton SelectInputFileJButton;
    private javax.swing.JButton StartConversionJButton;
    private javax.swing.JPanel TopJPanel;
    private javax.swing.JOptionPane jOptionPane1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables

    @Override
    public void onMessageReceived(String message, int messageType) {
        
        String formatedOutput = "";
        
        formatedOutput = message + "\n";
        
        switch(messageType)
        {
            case Logger.ERROR_MSG:
            case Logger.PROCCESS_MSG:
                  OutputJText.append(formatedOutput);
                  break;
            case Logger.INFO_MSG:
                  OutputReportJText.append(formatedOutput);
                  break;
            default:
                break;
        }
    }
}
